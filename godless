#!/usr/bin/env bash

set -e

function usage() {
  echo ""
  echo "Commands:"
  echo ""
  echo " build         Build app"
  echo " test          Run unit tests"
  echo " cover         Run unit tests and generate coverage file"
  echo " fmt           Format the code with go standards"
  echo " vet           Check and reports suspicious constructs"
  echo " bash          Enter the bash interface"
  echo " mod [COMMAND] Command to manage go modules"
  echo ""
  exit 0
}

APP_NAME="godless"
DOCKER_RUN="docker run --rm --mount source=go-cache,target=/root/.cache --mount source=go,target=/go -v $(pwd):/app"

if [ $# -gt 0 ];then

    if [ "$1" == "build" ]; then
        docker build -t ${APP_NAME} .
        ${DOCKER_RUN} ${APP_NAME} go get -d -v ./...
        ${DOCKER_RUN} ${APP_NAME} go get github.com/albankora/godless/cmd/godless
        ${DOCKER_RUN} ${APP_NAME} godless

    elif [ "$1" == "test" ]; then
        ${DOCKER_RUN} ${APP_NAME} go test ./...

    elif [ "$1" == "cover" ]; then
        ${DOCKER_RUN} ${APP_NAME} go test ./... -coverprofile=test-coverage.out
        ${DOCKER_RUN} ${APP_NAME} go test ./... -json | sed -n '1!p' > test-report.json

    elif [ "$1" == "fmt" ]; then
       ${DOCKER_RUN} ${APP_NAME} go fmt ./...

    elif [ "$1" == "vet" ]; then
        ${DOCKER_RUN} ${APP_NAME} go vet ./...

    elif [ "$1" == "mod" ]; then
        shift 1
        ${DOCKER_RUN} ${APP_NAME} go mod "$@"

    elif [ "$1" == "bash" ]; then
        ${DOCKER_RUN} -it ${APP_NAME} /bin/bash

    else
        ${DOCKER_RUN} ${APP_NAME} "$@"
    fi

else
    usage
fi